@inject IMediator Mediator
@inject NavigationManager Navigation

<MudTable Items="@_documents" Hover="true" Bordered="true" Striped="true" Loading="_loading">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Documents</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" OnClick="@NavigateToWorkflowSettings">Töövoo seaded</MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Pealkiri</MudTh>
        <MudTh>Kirjeldus</MudTh>
        <MudTh>Tegevused</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Title</MudTd>
        <MudTd>@context.Description</MudTd>
        <MudTd>
            <MudButton Size="Size.Small" Variant="Variant.Filled" OnClick="() => NavigateToWorkflows(context)">Workflows</MudButton>
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>Dokumente ei leitud</NoRecordsContent>
</MudTable>

@code {
    private bool _loading;
    private List<LibraryDocument> _documents = [];

    [Parameter, EditorRequired]
    public string Name { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        _documents = await Mediator.Send(new GetLibraryDocumentsQuery(Name));

        _loading = false;
    }

    private void NavigateToWorkflowSettings()
    {
        Navigation.NavigateTo($"/{PageRoutes.WorkflowSettings}/{Name.ToLower()}");
    }

    private void NavigateToWorkflows(LibraryDocument document)
    {
        Navigation.NavigateTo($"/{PageRoutes.LibraryWorkflows}/{document.LibraryId}/{document.Id}");
    }
}