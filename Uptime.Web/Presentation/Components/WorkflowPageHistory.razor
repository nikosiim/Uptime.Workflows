@inject IMediator Mediator

@if (ShowTitle)
{
    <div class="mb-4">
        <MudText Typo="Typo.h5">Töövoo ajalugu</MudText>
        <MudText Typo="Typo.subtitle1">Selles töövoos ilmnesid järgmised sündmused.</MudText>
    </div>
}

<MudTable Items="@_historyItems" Dense="true" Outlined="true">
    <HeaderContent>
        <MudTh>Toimumise aeg</MudTh>
        <MudTh>Sündmuse tüüp</MudTh>
        <MudTh>Kasutaja</MudTh>
        <MudTh>Kirjeldus</MudTh>
        <MudTh>Kommentaar</MudTh>
    </HeaderContent>
    <RowTemplate Context="entry">
        <MudTd>@entry.Occurred.ToString("g")</MudTd>
        <MudTd>@entry.EventText</MudTd>
        <MudTd>@entry.User</MudTd>
        <MudTd>@entry.Description</MudTd>
        <MudTd>@entry.Comment</MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter] public bool ShowTitle { get; set; } = true;
    [Parameter, EditorRequired] public int WorkflowId { get; set; }

    private List<WorkflowHistoryDto> _historyItems = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _historyItems = await Mediator.Send(new GetWorkflowHistoryQuery(WorkflowId));
    }
}