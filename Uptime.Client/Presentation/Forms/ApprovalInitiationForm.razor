@page "/approval-initiation/{templateId:int}/{documentId:int}"
@inherits WorkflowInitForm<ApprovalFormModel>
@inject IUserService UserService

<MudPaper Class="pa-4" Elevation="0" Style="max-width:800px;">
    <MudPaper Class="pa-4 mb-4" Elevation="0">
        <MudText Typo="Typo.h5">@FormModel.TemplateName</MudText>
    </MudPaper>

    <MudForm @ref="Form" Spacing="1">
        <MudPaper Class="pa-2 mb-2" Elevation="3" Outlined="true">
            <MudRadioGroup T="int" @bind-Value="ReplicatorType">
                <MudRadio Value="1" Color="Color.Primary" UncheckedColor="Color.Default" Size="Size.Small">Jadamisi</MudRadio>
                <MudRadio Value="2" Color="Color.Secondary" UncheckedColor="Color.Default" Size="Size.Small">Paralleelselt</MudRadio>
            </MudRadioGroup>
        </MudPaper>
        <MudSelect T="string" Label="Kinnitajad" Variant="Variant.Outlined" Placeholder="Vali kinnitajad"
                   @bind-SelectedValues="FormModel.AssignedTo" MultiSelection="true">
            @foreach (User user in UserService.GetUsers())
            {
                <MudSelectItem T="string" Value="@user.Sid">@user.Name</MudSelectItem>
            }
        </MudSelect>
        <MudTextField T="string" Label="Ülesanne" Variant="Variant.Outlined" @bind-Value="FormModel.TaskDescription" Lines="4"/>
        <MudDatePicker Label="Ülesande täitmise aeg" Variant="Variant.Outlined" @bind-Date="FormModel.DueDate" DateFormat="dd.MM.yyyy" />
        <MudSelect T="string" Label="Allkirjastaja" Variant="Variant.Outlined" Placeholder="Vali allkirjastaja"
                   @bind-Value="FormModel.Signer" MultiSelection="false">
            @foreach (User user in UserService.GetUsers())
            {
                <MudSelectItem T="string" Value="@user.Sid">@user.Name</MudSelectItem>
            }
        </MudSelect>
    </MudForm>

    <MudStack Row="true" Class="mt-4" Justify="Justify.FlexStart">
        <MudButton Variant="Variant.Filled" OnClick="StartWorkflow" Color="Color.Primary" Disabled="@_isDisabled">Alusta</MudButton>
        <MudButton Variant="Variant.Outlined" OnClick="Cancel" Color="Color.Error">Loobu</MudButton>
    </MudStack>
</MudPaper>

@code
{
    private bool _isDisabled;
    private int ReplicatorType { get; set; } = 1;

    private async Task StartWorkflow()
    {
        await Form.Validate();
        if (!Form.IsValid)
            return;

        _isDisabled = true;

        var storage = new Dictionary<string, string?>
        {
            [StorageKeys.Workflow.Core.AssociationName] = FormModel.TemplateName,
            [StorageKeys.Workflow.Approval.ReplicatorType] = ReplicatorType.ToString(),
            [StorageKeys.Workflow.Approval.TaskApproverDescription] = FormModel.TaskDescription
        };

        storage.SetValueAsDateTime(StorageKeys.Workflow.Approval.TaskApprovalDueDate, FormModel.DueDate);
        storage.SetValueAsList(StorageKeys.Workflow.Approval.TaskApproverSids, FormModel.AssignedTo);

        if (!string.IsNullOrWhiteSpace(FormModel.Signer))
        {
            storage.SetValueAsList(StorageKeys.Workflow.Approval.TaskSignerSids, [FormModel.Signer]);
        }

        var command = new StartWorkflowCommand
        {
            WorkflowTemplateId = TemplateId,
            DocumentId = DocumentId,
            Storage = storage
        };

        Result<bool> result = await Mediator.Send(command);
        if (!result.Succeeded)
        {
            Snackbar.Add("Töövoo käivitamine ebaõnnestus");
        }

        _isDisabled = false;

        Navigation.NavigateTo($"/library-workflow/1/{DocumentId}");
    }
}