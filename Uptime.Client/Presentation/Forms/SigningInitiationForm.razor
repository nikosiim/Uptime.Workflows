@page "/signing-initiation/{templateId:int}/{documentId:int}"
@inherits WorkflowInitForm<SigningFormModel>
@inject IUserService UserService

<MudPaper Class="pa-4" Elevation="0" Style="max-width:800px;">
    <MudPaper Class="pa-4 mb-4" Elevation="0">
        <MudText Typo="Typo.h4">@FormModel.TemplateName</MudText>
    </MudPaper>

    <MudForm @ref="Form" Spacing="1">
        <MudSelect T="string" Label="Allkirjastaja" Variant="Variant.Outlined" Placeholder="Vali allkirjastaja"
                   @bind-Value="FormModel.Signer" MultiSelection="false">
            @foreach (string name in UserService.GetUsers().Select(u => u.Name))
            {
                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
            }
        </MudSelect>
        <MudTextField T="string" Label="Ülesanne" Variant="Variant.Outlined" @bind-Value="FormModel.TaskDescription" Lines="4" />
        <MudNumericField Label="Ülesande täitmise aeg" Variant="Variant.Outlined" @bind-Value="FormModel.DueDays" />
    </MudForm>

    <MudStack Row="true" Class="mt-4" Justify="Justify.FlexStart">
        <MudButton Variant="Variant.Filled" OnClick="StartWorkflow" Color="Color.Primary" Disabled="@_isDisabled">Alusta</MudButton>
        <MudButton Variant="Variant.Outlined" OnClick="Cancel" Color="Color.Error">Loobu</MudButton>
    </MudStack>
</MudPaper>


@code
{
    private bool _isDisabled;

    private async Task StartWorkflow()
    {
        await Form.Validate();
        if (!Form.IsValid)
            return;

        _isDisabled = true;

        var storage = new Dictionary<string, string?>
        {
            [GlobalConstants.WorkflowStorageKeys.AssociationName] = FormModel.TemplateName,
            [GlobalConstants.TaskStorageKeys.TaskDescription] = FormModel.TaskDescription,
            [GlobalConstants.TaskStorageKeys.TaskDueDays] = FormModel.DueDays.ToString()
        };

        storage.SetValueAsList(GlobalConstants.TaskStorageKeys.TaskSigners, [FormModel.Signer!]);
        
        var command = new StartWorkflowCommand
        {
            WorkflowTemplateId = TemplateId,
            DocumentId = DocumentId,
            Storage = storage
        };

        Result<bool> result = await Mediator.Send(command);
        if (!result.Succeeded)
        {
            Snackbar.Add("Töövoo käivitamine ebaõnnestus");
        }

        _isDisabled = false;

        Navigation.NavigateTo($"/library-workflow/1/{DocumentId}");
    }
}