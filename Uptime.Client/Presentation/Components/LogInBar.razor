@inherits FluxorComponent
@inject IState<WorkflowState> WorkflowState
@inject IUserService UserService
@inject IDispatcher Dispatcher

@if (WorkflowState.Value.CurrentUser != null)
{
    <MudText Typo="Typo.body1" Class="px-2" Color="@(WorkflowState.Value.CurrentUser.IsAdmin ? Color.Warning : Color.Default)">
        @WorkflowState.Value.CurrentUser.Name
    </MudText>
    <MudIconButton Icon="@Icons.Material.Filled.Logout" OnClick="OpenUserSelectionDialog" />
}

<MudDialog Visible="@ShowUserSelectionDialog" Options="_dialogOptions">
    <DialogContent>
        <MudSelect T="User" Label="Kes sa oled?" Variant="Variant.Outlined" Placeholder="Vali kasutaja" @bind-Value="_selectedUser">
            @foreach (User user in UserService.GetUsers())
            {
                <MudSelectItem T="User" Value="@user">
                    <MudContainer Class="d-flex align-center">
                        <MudText>@user.Name</MudText>
                        @if (user.IsAdmin)
                        {
                            <MudText Typo="Typo.caption" Class="ml-1">(Administrator)</MudText>
                        }
                    </MudContainer>
                </MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="ConfirmUserSelection">Salvesta</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private bool _forceShowDialog = false;
    private User _selectedUser = User.Default;
    private bool ShowUserSelectionDialog => WorkflowState.Value.CurrentUser == null || _forceShowDialog;

    private readonly DialogOptions _dialogOptions = new()
    {
        FullWidth = true,
        Position = DialogPosition.TopCenter,
        MaxWidth = MaxWidth.Medium
    };
    
    private void OpenUserSelectionDialog()
    {
        _forceShowDialog = true;
    }

    private void ConfirmUserSelection()
    {
        Dispatcher.Dispatch(new SetCurrentUserAction(_selectedUser));
        _forceShowDialog = false;
    }
}