@inject IState<WorkflowState> WorkflowState

<MudPaper Elevation="0" MinHeight="250px">
    <MudText Typo="Typo.h5" Class="my-6">Töövoo käivitamine</MudText>

    @if (AvailableTemplates.Count > 0)
    {
        <MudGrid>
            @foreach (WorkflowTemplate template in AvailableTemplates)
            {
                <MudItem xs="12" sm="6" md="3">
                    <MudPaper Class="pa-3" Elevation="2" Style="min-width: fit-content;">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                            <MudAvatar Size="Size.Small" Color="Color.Primary">
                                <MudIcon Icon="@Icons.Material.Filled.Work" Size="Size.Small" />
                            </MudAvatar>

                            <MudLink Href="@(GetInitiationFormUrl(template, DocumentId))" Style=" white-space: nowrap;">@template.Name</MudLink>

                        </MudStack>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
    else
    {
        <MudText>No workflows available for this list.</MudText>
    }
</MudPaper>

@code {
    [Parameter, EditorRequired] 
    public int DocumentId { get; set; }

    [Parameter, EditorRequired]
    public List<DocumentWorkflow>? Workflows { get; set; }

    [Parameter, EditorRequired]
    public List<WorkflowTemplate>? WorkflowTemplates { get; set; }

    private List<WorkflowTemplate> AvailableTemplates
    {
        get
        {
            List<DocumentWorkflow> activeWorkflows = Workflows?.Where(w => w.IsActive).ToList() ?? [];
            return WorkflowTemplates?.Where(t => activeWorkflows.All(w => w.TemplateId != t.Id)).ToList() ?? [];
        }
    }

    private string GetInitiationFormUrl(WorkflowTemplate template, int documentId)
    {
        WorkflowDefinition? definition = WorkflowState.Value.WorkflowDefinitionsQuery.Result.Value?.First(x => x.Id == template.WorkflowBaseId);

        if (!string.IsNullOrWhiteSpace(definition?.FormsConfiguration?.InitiationPage))
        { 
            return $"/{definition.FormsConfiguration!.InitiationPage}/{template.Id}/{documentId}";
        }

        Console.WriteLine(@"Workflow definition forms configuration missing");
        return "";
    }
}